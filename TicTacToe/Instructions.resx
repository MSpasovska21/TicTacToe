<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>